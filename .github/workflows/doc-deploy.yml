name: Deploy Laast.io

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build-doc:
    name: Build doc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up dockertags
        run: |
          echo "dockertags=digisquad/shuriken-ui-docs:v4" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        timeout-minutes: 60
        with:
          push: true
          context: .
          target: docs
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ env.dockertags }}
          build-args: |
            NUXT_PUBLIC_SITE_URL=${{ secrets.NUXT_PUBLIC_SITE_URL }}

  deploy-doc:
    name: Deploy doc
    needs: build-doc
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Prepare
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: mkdir -p ${{ secrets.HOST_DIRECTORY }}

      - name: Prepare .env file
        shell: bash
        run: |
          echo "NUXT_PUBLIC_SITE_URL=\"${{ secrets.NUXT_PUBLIC_SITE_URL }}\"" >> .github/env/.env

      - name: Publish
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: .github/env/docker-compose.yml,.github/env/.env
          target: ${{ secrets.HOST_DIRECTORY }}
          strip_components: 2

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.HOST_DIRECTORY }}
            docker compose pull
            docker compose up -d --force-recreate --remove-orphans
            docker image prune -f -a --filter "until=24h"
